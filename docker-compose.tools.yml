services:
  formatter-golang:
    image: golang:1.22-alpine
    volumes:
      - ./src:/go
    entrypoint: /bin/sh
    command: >
      -c "gofmt -w -s ."
    profiles:
      - formatters
  formatter-terraform:
    build: terraform
    volumes:
      - ./terraform:/workspace
    working_dir: /workspace
    entrypoint: /bin/bash
    command: >
      -c "while true; do inotifywait -r -e modify,create,delete,move /workspace; terraform fmt -recursive; done"
    profiles:
      - formatters

  security-golang:
    image: golang:1.22-alpine
    volumes:
      - ./:/go
    entrypoint: /bin/sh
    # using -quiet so it doesn't throw a bad error code if there are no errors
    command: >
      -c '
      wget -O - -q https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s v2.20.0 &&
      ./bin/gosec -quiet ./...
      '

  tools-locale-translate: &tools-golang
    build:
      dockerfile_inline: |
        FROM golang:alpine
        WORKDIR /app
        COPY src/go.mod .
        RUN go mod download
    working_dir: /app
    volumes:
      - ./src:/app
    entrypoint: /bin/sh
    command: >
      -c '
      go run ./cmd/locale-translate/main.go -input web/src/locales/en.json -output web/src/locales/es.json &&
      go run ./cmd/locale-translate/main.go -input web/src/locales/en.json -output web/src/locales/fr.json &&
      echo "done"
      '
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    profiles:
      - tools
  tools-prompt-translate:
    <<: *tools-golang
    volumes:
      - ./src:/app
    command: >
      -c '
      go run ./cmd/prompt-translate/main.go -input assets/prompts/en/verify.txt -output assets/prompts/es/verify.txt && cat assets/prompts/es/verify.txt &&
      go run ./cmd/prompt-translate/main.go -input assets/prompts/en/improve.txt -output assets/prompts/es/improve.txt && cat assets/prompts/es/improve.txt &&
      echo "done"
      '
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    profiles:
      - tools
