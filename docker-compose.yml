services:
  chatparser:
    build:
      context: src
      target: gobuilder
    volumes:
      - ./src:/app  # Mount current directory as /app in the container (for code changes)
      - ./src/web/dist:/app/static
    command: ["fresh"]
    environment:
      GO_ENV: development
      PORT: ${PORT}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      STORAGE_EMULATOR_HOST: gcsemulator:8888
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - gcsemulator
  vite:
    image: node:22-alpine
    entrypoint: ""
    environment:
      VITE_DEV_HOST: 'https://local.chatparser.xyz'
    ports:
      - 443:443
    working_dir: /srv/app
    volumes:
      - ./src/web:/srv/app
      - ./src/.cert:/srv/.cert
    command: /bin/sh -c "npm run dev"
    depends_on:
      - chatparser
  gcsemulator:
    image: golang:alpine
    ports:
      - 8888:8888
    command:
      - /bin/sh
      - -c
      - |
        go install github.com/fullstorydev/emulators/storage/...@latest
        gcsemulator -port 8888 -dir var/storage

  terraform: &terraform
    build: terraform
    volumes:
      - ./terraform:/workspace
      - ~/.config/gcloud:/root/.config/gcloud
    environment:
      TF_VAR_IMPERSONATE_SERVICE_ACCOUNT: ${IMPERSONATE_SERVICE_ACCOUNT}
    working_dir: /workspace/envs
    entrypoint: /bin/bash
    # prevent this from running with `docker-compose up`
    profiles:
      - terraform

  formatter-golang:
    image: golang:1.22
    volumes:
      - ./src:/go
    entrypoint: /bin/bash
    command: >
      -c "gofmt -w -s ."
    profiles:
      - formatters
  formatter-terraform:
    <<: *terraform
    # array elements aren't inhereted from <<: *service syntax
    volumes:
      - ./terraform:/workspace
    working_dir: /workspace
    command: >
      -c "while true; do inotifywait -r -e modify,create,delete,move /workspace; terraform fmt -recursive; done"
    profiles:
      - formatters
