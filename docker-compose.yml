include:
  - ./docker-compose.tools.yml

services:
  golang:
    build:
      context: src
      target: gobuilder
    volumes:
      - ./src:/app # Mount current directory as /app in the container (for code changes)
    command: ['fresh']
    environment:
      GO_ENV: development
      PORT: ${PORT}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      STORAGE_EMULATOR_HOST: gcsemulator:8888
      ACCEPT_CUSTOM_PROMPT_TEXT: true
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - gcsemulator
  vite:
    build:
      context: src
      target: staticbuilder
    entrypoint: ''
    environment:
      VITE_DEV_HOST: 'https://local.chatparser.xyz'
    ports:
      - 443:443
    working_dir: /srv/app
    volumes:
      - ./src/web:/srv/app
      - ./src/.cert:/srv/.cert
    command: /bin/sh -c "yarn install && yarn run dev"
    depends_on:
      - golang
  gcsemulator:
    image: golang:alpine
    ports:
      - 8888:8888
    volumes:
      - ./src/tmp/local-gcs:/go/var/storage
    command:
      - /bin/sh
      - -c
      - |
        go install github.com/fullstorydev/emulators/storage/...@latest
        gcsemulator -port 8888 -host 0.0.0.0 -dir var/storage
  terraform: &terraform
    build: terraform
    volumes:
      - ./terraform:/workspace
      - ~/.config/gcloud:/root/.config/gcloud
    environment:
      TF_VAR_IMPERSONATE_SERVICE_ACCOUNT: ${IMPERSONATE_SERVICE_ACCOUNT}
    working_dir: /workspace/envs
    entrypoint: /bin/bash
    # prevent this from running with `docker-compose up`
    profiles:
      - terraform
